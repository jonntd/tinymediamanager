name: CI/CD Pipeline

on:
  push:
    branches: [ devel ]
    tags:
      - 'v*'
  pull_request:
    branches: [ devel ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - release

jobs:
  # 简化构建
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Simple build
      run: |
        mvn clean compile --batch-mode -DskipTests=true -Ddependency.copy.skip=true
        mvn package --batch-mode -DskipTests=true -Ddependency.copy.skip=true -DskipSign=true
    
    - name: Print success
      run: |
        echo "🎉 构建成功!"
        echo "📦 JAR 文件已生成"
        ls -la target/*.jar || echo "未找到 JAR 文件"
