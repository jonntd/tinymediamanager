<?xml version="1.0" encoding="UTF-8"?>
<!--suppress UnresolvedMavenProperty -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.tinymediamanager</groupId>
    <artifactId>tinyMediaManager</artifactId>
    <version>5.2.0-SNAPSHOT</version>
    <name>tinyMediaManager</name>
    <description>a media management tool written in Java</description>
    <url>https://www.tinymediamanager.org/</url>
    <inceptionYear>2012</inceptionYear>
    <organization>
        <name>tinyMediaManager</name>
        <url>https://www.tinymediamanager.org</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>mlaggner</id>
            <name>Manuel Laggner</name>
            <email>manuel@tinymediamanager.org</email>
            <roles>
                <role>owner</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Vienna</timezone>
        </developer>
        <developer>
            <id>myron</id>
            <name>Myron Boyle</name>
            <email>myron@tinymediamanager.org</email>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>Europe/Vienna</timezone>
            <properties>
                <picUrl>http://www.gravatar.com/avatar/c9f1f8250a29405f5cbbab246a025fb4</picUrl>
            </properties>
        </developer>
    </developers>
    <mailingLists>
        <mailingList>
            <name>Reddit</name>
            <post>https://www.reddit.com/r/tinyMediaManager/</post>
        </mailingList>
    </mailingLists>
    <scm>
        <url>https://gitlab.com/tinyMediaManager/${project.artifactId}</url>
        <connection>scm:git:git@gitlab.com:tinyMediaManager/${project.artifactId}.git</connection>
        <developerConnection>scm:git:git@gitlab.com:tinyMediaManager/${project.artifactId}.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <ciManagement>
        <system>GitLab CI</system>
        <url>https://gitlab.com/tinyMediaManager/${project.artifactId}/pipelines</url>
    </ciManagement>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.release>17</maven.compiler.release>
        <skipTests>true</skipTests> <!-- to override on command line -->
        <skipITests>true</skipITests> <!-- to override on command line -->
        <skipSign>true</skipSign> <!-- to override on command line -->
        <tier>GIT</tier> <!-- we replace this with nightly/prerel, but if not set, keep snapshot -->

        <jar.version>3.4.2</jar.version>
        <surefire.version>3.5.3</surefire.version>
        <compiler.version>3.14.0</compiler.version>
        <enforcer.version>3.6.1</enforcer.version>
        <animal-sniffer.version>1.17</animal-sniffer.version>
        <wagon-webdav-jackrabbit.version>3.0.0</wagon-webdav-jackrabbit.version>
        <okhttp.version>4.12.0</okhttp.version>
        <slf4j.version>2.0.9</slf4j.version>
        <release.version>3.1.1</release.version>
        <jre.version>21.0.8-b1038</jre.version>
        <launcher.version>5.0.11</launcher.version>
        <flatlaf.version>3.6.1</flatlaf.version>
        <jackson.version>2.15.2</jackson.version>
        <sonar.java.source>17</sonar.java.source>
        <!-- Default assembly descriptor (will be overridden by platform profiles) -->
        <assembly.descriptor>src/assembly/linux-amd64.xml</assembly.descriptor>
    </properties>
    <dependencies>
        <!-- 破解许可证依赖 - 自动检测模式 -->
        <dependency>
            <groupId>org.tinymediamanager</groupId>
            <artifactId>license-cracked</artifactId>
            <version>5.2.1</version>
            <!-- 仅在文件存在时激活 -->
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.18.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.10.0</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.16.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.13</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.10</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.14.0</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.16.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-blackbird</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-gson</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp-urlconnection</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp-brotli</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
        <!-- J9 / J10 / J11 deps -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>fr.turri</groupId>
            <artifactId>aXMLRPC</artifactId>
            <version>1.13.0</version> <!-- cannot upgrade at the moment - breaks org.w3c.dom import -->
        </dependency>
        <dependency>
            <groupId>org.tinymediamanager</groupId>
            <artifactId>kodi-json-rpc</artifactId>
            <version>5.0</version>
        </dependency>
        <dependency>
            <groupId>org.tinymediamanager</groupId>
            <artifactId>libdvd</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.tinymediamanager</groupId>
            <artifactId>libbluray</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>com.uwetrottmann.trakt5</groupId>
            <artifactId>trakt-java</artifactId>
            <version>6.11.2</version>
        </dependency>
        <dependency>
            <groupId>it.tidalwave.betterbeansbinding</groupId>
            <artifactId>betterbeansbinding-swingbinding</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.glazedlists</groupId>
            <artifactId>glazedlists</artifactId>
            <version>1.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>4.2</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>5.16.0</version>
        </dependency>
        <dependency>
            <groupId>com.floreysoft</groupId>
            <artifactId>jmte</artifactId>
            <version>7.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-swing</artifactId>
            <version>11.2</version> <!-- 5.3 and 11 have scaling issues when using a bigger font-->
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2-mvstore</artifactId>
            <version>2.3.232</version>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.java-iso-tools</groupId>
            <artifactId>loop-fs-iso-impl</artifactId>
            <version>2.0.2-TMM-6</version>
            <exclusions>
                <exclusion>
                    <!-- we use JCL-over-slf4j -->
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.java-iso-tools</groupId>
            <artifactId>loop-fs-udf-impl</artifactId>
            <version>2.0.2-TMM-6</version>
            <exclusions>
                <exclusion>
                    <!-- we use JCL-over-slf4j -->
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.nanohttpd</groupId>
            <artifactId>nanohttpd</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-support</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.madgag</groupId>
            <artifactId>animated-gif-lib</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <version>3.10.1</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-webp</artifactId>
            <version>3.10.1</version>
        </dependency>
        <dependency>
            <groupId>org.mp4parser</groupId>
            <artifactId>muxer</artifactId>
            <version>1.9.56</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>svgSalamander</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>com.threerings.getdown</groupId>
            <artifactId>getdown-core</artifactId>
            <version>1.8.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.26.0</version>
        </dependency>
        <dependency>
            <groupId>org.brotli</groupId>
            <artifactId>dec</artifactId>
            <version>0.1.2</version>
        </dependency>
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>2.11.5</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.tinymediamanager</groupId>
            <artifactId>yt</artifactId>
            <version>3.3.1-tmm3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.10.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.jacksonbrienen</groupId>
            <artifactId>jwfd</artifactId>
            <version>0.9.0</version>
        </dependency>
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>github-maven</id>
            <url>https://maven.pkg.github.com/tinyMediaManagerOrg/dependencies/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>gitlab-maven</id>
            <url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>gitlab-maven</id>
            <url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
        </repository>
        <snapshotRepository>
            <id>gitlab-maven</id>
            <url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
        </snapshotRepository>
    </distributionManagement>
    <build>
        <resources>
            <resource>
                <includes>
                    <include>eclipse.properties</include>
                </includes>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <excludes>
                    <exclude>eclipse.properties</exclude>
                </excludes>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/docker</directory>
                <filtering>true</filtering>
                <targetPath>${basedir}/target/docker</targetPath>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <!-- need to get the translations into test classpath, for Utils.getLanguages() to work -->
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.5.0</version>
                    <executions>
                        <execution>
                            <id>default-clean</id>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                            <configuration>
                                <filesets>
                                    <fileset>
                                        <directory>dist</directory>
                                        <includes>
                                            <include>**</include>
                                        </includes>
                                    </fileset>
                                </filesets>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${release.version}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <releaseProfiles>dist</releaseProfiles>
                        <goals>deploy</goals>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>false</addClasspath>
                                <classpathLayoutType>custom</classpathLayoutType>
                                <customClasspathLayout>lib/${artifact.artifactId}.${artifact.extension}
                                </customClasspathLayout>
                                <mainClass>org.tinymediamanager.TinyMediaManager</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            </manifest>
                            <manifestEntries>
                                <SplashScreen-Image>splashscreen.png</SplashScreen-Image>
                                <Human-Version>${human.version}</Human-Version>
                                <Build-Nr>${buildNumber}</Build-Nr>
                                <Build-Date>${timestamp}</Build-Date>
                                <Build-By>${user.name}</Build-By>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <artifactSet>
                            <includes>
                                <include>org.tinymediamanager:yt</include>
                                <include>org.tinymediamanager:kodi-json-rpc</include>
                                <include>org.tinymediamanager:libdvd</include>
                                <include>org.tinymediamanager:libbluray</include>
                                <!-- 破解许可证 - 仅在文件存在时包含 -->
                                <include>org.tinymediamanager:license-cracked</include>
                                <include>com.github.stephenc.java-iso-tools:loop-fs-iso-impl</include>
                                <include>com.github.stephenc.java-iso-tools:loop-fs-udf-impl</include>
                                <include>ch.qos.logback:*</include>
                                <include>org.slf4j:*</include>
                                <include>org.codehaus.janino:*</include>
                                <include>com.h2database:*</include>
                                <include>org.apache.commons:*</include>
                                <include>commons-codec:*</include>
                                <include>commons-io:*</include>
                                <include>com.fasterxml.jackson.core:*</include>
                                <include>com.fasterxml.jackson.dataformat:*</include>
                                <include>com.fasterxml.jackson.module:*</include>
                                <include>org.yaml:*</include>
                                <include>it.tidalwave.betterbeansbinding:*</include>
                                <include>com.glazedlists:*</include>
                                <include>org.jsoup:*</include>
                                <include>com.formdev:*</include>
                                <include>com.miglayout:*</include>
                                <include>jakarta.xml.bind:*</include>
                                <include>com.sun.xml.bind:*</include>
                                <include>com.sun.activation:*</include>
                                <include>com.squareup.okhttp3:*</include>
                                <include>com.squareup.okio:*</include>
                                <include>com.squareup.retrofit2:*</include>
                                <include>com.google.code.gson:*</include>
                                <include>org.jetbrains.kotlin:*</include>
                                <include>org.jetbrains:*</include>
                                <include>net.java.dev.jna:*</include>
                                <include>org.imgscalr:*</include>
                                <include>com.madgag:*</include>
                                <include>com.twelvemonkeys.imageio:*</include>
                                <include>com.twelvemonkeys.common:*</include>
                            </includes>
                        </artifactSet>
                        <extraJars>${maven.shade.extra}</extraJars>
                        <transformers>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer" />
                        </transformers>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.MF</exclude>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <debug>true</debug>
                    <debuglevel>lines,vars,source</debuglevel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <skip>${skipTests}</skip>
                    <!-- spawn one jvm per test class per cpu core -->
                    <!-- needed for static settings per test -->
                    <parallel>classes</parallel>
                    <forkCount>1</forkCount>
                    <threadCount>1</threadCount>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xmx1024m</argLine>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*ITCase.java</exclude>
                        <exclude>**/integrationtest/**/*.java</exclude>
                        <exclude>**/integrationtests/**/*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire.version}</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <skip>${skipITests}</skip>
                    <includes>
                        <include>**/IT*.java</include>
                        <include>**/*IT.java</include>
                        <include>**/*ITCase.java</include>
                        <include>**/integrationtest/**/*.java</include>
                        <include>**/integrationtests/**/*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <!-- get SVN/GIT revision numbers -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                        <configuration>
                            <shortRevisionLength>7</shortRevisionLength>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- generate a timestamp -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <name>timestamp</name>
                            <pattern>yyyy-MM-dd HH:mm</pattern>
                            <timeZone>UTC</timeZone>
                            <locale>en,US</locale>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-itest-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-human-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>human.version</name>
                            <value>${project.version}</value>
                            <regex>SNAPSHOT</regex>
                            <replacement>${tier}</replacement>
                            <toUpperCase>true</toUpperCase>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar.version}</version>
                <executions>
                    <execution>
                        <!-- move default-jar to another phase -->
                        <id>default-jar</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- embed tmm created/modified dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${maven.compiler.release}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Sonarqube and dependency scanner -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>12.1.3</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>json</format>
                    </formats>
                </configuration>
                <!-- deactivated, activate with
                <executions>
                    <execution>
                        <goals>
                          <goal>check</goal>
                        </goals>
                    </execution>
                </executions> -->
            </plugin>
            <plugin>
                <!-- https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/scanners/sonarscanner-for-maven/ -->
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>5.1.0.4751</version>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>${wagon-webdav-jackrabbit.version}</version>
            </extension>
        </extensions>
    </build>
    <profiles>
        <profile>
            <id>gitlab-ci</id>
            <build>
                <plugins>
                    <!-- skip getting revision number on ci build -->
                    <plugin>
                        <!-- get SVN/GIT revision numbers -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>qa</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- skip packaging on QA build -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>dist</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                        <version>3.9</version>
                        <configuration>
                            <targetVersion>${maven.compiler.release}</targetVersion>
                            <!-- if the used Java version is too new, don't fail, just do nothing: -->
                            <failOnUnsupportedJava>false</failOnUnsupportedJava>
                            <failOnViolation>false</failOnViolation>
                            <!-- more https://github.com/policeman-tools/forbidden-apis/wiki/BundledSignatures -->
                            <bundledSignatures>
                                <!-- This will automatically choose the right signatures based on
                                    'maven.compiler.target': -->
                                <bundledSignature>jdk-deprecated</bundledSignature>
                                <bundledSignature>jdk-non-portable</bundledSignature>
                                <bundledSignature>jdk-system-out</bundledSignature>
                                <bundledSignature>jdk-internal</bundledSignature>
                                <bundledSignature>jdk-reflection</bundledSignature>
                                <!-- bundledSignature>commons-io-unsafe-2.5</bundledSignature -->
                                <!-- bundledSignature>jdk-unsafe</bundledSignature -->
                            </bundledSignatures>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.gaul</groupId>
                        <artifactId>modernizer-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <failOnViolations>false</failOnViolations>
                            <includeTestClasses>false</includeTestClasses>
                            <javaVersion>${maven.compiler.release}</javaVersion>
                            <outputFormat>CODE_CLIMATE</outputFormat>
                        </configuration>
                        <executions>
                            <execution>
                                <id>modernizer</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>modernizer</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dist</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>${jar.version}</version>
                        <executions>
                            <execution>
                                <!-- move default-jar to another phase -->
                                <id>default-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jarsigner-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sign</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>${skipSign}</skip>
                            <storetype>pkcs12</storetype>
                            <keystore>code-sign-cert.p12</keystore>
                            <alias>${CODE_SIGN_ALIAS}</alias>
                            <sigfile>tmm</sigfile>
                            <keypass>${CODE_SIGN_PASS}</keypass>
                            <storepass>${CODE_SIGN_PASS}</storepass>
                            <tsa>http://timestamp.sectigo.com</tsa>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- copies our dependencies WITHOUT version number for
                        packaging -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.8.1</version>
                        <executions>
                            <execution>
                                <id>copy-tmm-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeScope>runtime</includeScope>
                                    <stripVersion>true</stripVersion>
                                    <!-- exclude shaded dependencies -->
                                    <excludeArtifactIds>
                                        yt,kodi-json-rpc,libdvd,libbluray,loop-fs-iso-impl,loop-fs-udf-impl
                                    </excludeArtifactIds>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-JRE</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>windows_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>linux_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>linux_aarch64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>macos_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>macos_aarch64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/jre</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <stripVersion>true</stripVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-JRE</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>windows_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                            <outputDirectory>${project.build.directory}/windows-x64/jre
                                            </outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>linux_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                            <outputDirectory>${project.build.directory}/linux-x64/jre</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>linux_aarch64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                            <outputDirectory>${project.build.directory}/linux-aarch64/jre
                                            </outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>macos_x64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                            <outputDirectory>${project.build.directory}/macos-x64/jre</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager.jre</groupId>
                                            <artifactId>macos_aarch64</artifactId>
                                            <version>${jre.version}</version>
                                            <type>tar.xz</type>
                                            <outputDirectory>${project.build.directory}/macos-aarch64/jre
                                            </outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-launcher</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.tinymediamanager</groupId>
                                            <artifactId>launcher</artifactId>
                                            <version>${launcher.version}</version>
                                            <type>tar.gz</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/launcher</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-flatlaf</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.formdev</groupId>
                                            <artifactId>flatlaf</artifactId>
                                            <version>${flatlaf.version}</version>
                                            <classifier>no-natives</classifier>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>com.formdev</groupId>
                                            <artifactId>flatlaf</artifactId>
                                            <version>${flatlaf.version}</version>
                                            <classifier>macos-arm64</classifier>
                                            <type>dylib</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>com.formdev</groupId>
                                            <artifactId>flatlaf</artifactId>
                                            <version>${flatlaf.version}</version>
                                            <classifier>macos-x86_64</classifier>
                                            <type>dylib</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/flatlaf</outputDirectory>
                                    <overWriteReleases>true</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <stripVersion>true</stripVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.7.1</version>
                        <executions>
                            <execution>
                                <!-- first assemble a base folder to copy -->
                                <id>prepare-dist</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>false</attach>
                                    <descriptors>
                                        <descriptor>src/assembly/templates.xml</descriptor>
                                        <descriptor>src/assembly/base.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- then a getdown folder w/o version -->
                                <id>prepare-gd</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>false</attach>
                                    <finalName>${project.artifactId}</finalName>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/assembly/getdown.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>

                            <!-- and after ANT is run, finally assemble out dists -->
                            <execution>
                                <id>assemble-dist</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>dist</outputDirectory>
                                    <finalName>${project.artifactId}-${human.version}</finalName>
                                    <attach>false</attach>
                                    <descriptors>
                                        <!-- Will be set by platform-specific properties -->
                                        <descriptor>${assembly.descriptor}</descriptor>
                                    </descriptors>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>

                            <!-- create intermediate archives for the macOS packaging -->
                            <execution>
                                <id>assemble-mac</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target</outputDirectory>
                                    <finalName>${project.artifactId}-${human.version}</finalName>
                                    <attach>false</attach>
                                    <descriptors>
                                        <!-- Will be set by platform-specific properties -->
                                        <descriptor>${assembly.descriptor}</descriptor>
                                    </descriptors>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.nicoulaj.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <version>1.11</version>
                        <executions>
                            <execution>
                                <id>generate-sha256-checksums</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                                <configuration>
                                    <algorithms>
                                        <algorithm>SHA-256</algorithm>
                                    </algorithms>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}/jre</directory>
                                            <excludes>
                                                <exclude>*.sha256</exclude>
                                            </excludes>
                                        </fileSet>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>*templates.tar.bz2</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- ANT is called inbetween to do its GD magic -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>ant-getdown</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <property name="tmmRevision" value="${buildNumber}"/>
                                <property name="tmmTimestamp" value="${timestamp}"/>
                                <ant antfile="${project.basedir}/ant-getdown.xml">
                                    <target name="getdown"/>
                                </ant>
                            </target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Platform-specific build profiles using properties -->
        <profile>
            <id>windows-amd64</id>
            <properties>
                <assembly.descriptor>src/assembly/windows-amd64.xml</assembly.descriptor>
            </properties>
        </profile>

        <profile>
            <id>linux-amd64</id>
            <properties>
                <assembly.descriptor>src/assembly/linux-amd64.xml</assembly.descriptor>
            </properties>
        </profile>

        <profile>
            <id>linux-arm64</id>
            <properties>
                <assembly.descriptor>src/assembly/linux-arm64.xml</assembly.descriptor>
            </properties>
        </profile>

        <profile>
            <id>macos-x86_64</id>
            <properties>
                <assembly.descriptor>src/assembly/macos-x86_64.xml</assembly.descriptor>
            </properties>
        </profile>

        <profile>
            <id>macos-aarch64</id>
            <properties>
                <assembly.descriptor>src/assembly/macos-aarch64.xml</assembly.descriptor>
            </properties>
        </profile>

        <!-- 自动切换Profile系统 -->

        <!-- Profile 1: 有破解文件时使用 -->
        <profile>
            <id>with-license</id>
            <activation>
                <file>
                    <exists>lib/license-cracked.jar</exists>
                </file>
            </activation>
            <properties>
                <build.mode>cracked</build.mode>
            </properties>
            <!-- 破解依赖已在主dependencies中定义 -->
        </profile>

        <!-- Profile 2: 无破解文件时使用（GitHub Actions） -->
        <profile>
            <id>without-license</id>
            <activation>
                <file>
                    <missing>lib/license-cracked.jar</missing>
                </file>
            </activation>
            <properties>
                <build.mode>github</build.mode>
            </properties>
            <build>
                <plugins>
                    <!-- 跳过主要构建，只编译基础类 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <failOnError>false</failOnError>
                            <excludes>
                                <!-- 排除所有使用许可证的类 -->
                                <exclude>**/TinyMediaManager.java</exclude>
                                <exclude>**/scraper/**/*Provider.java</exclude>
                                <exclude>**/tasks/**/*Task.java</exclude>
                                <exclude>**/actions/**/*Action.java</exclude>
                                <exclude>**/threading/TmmTask.java</exclude>
                                <exclude>**/FeatureNotEnabledException.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
